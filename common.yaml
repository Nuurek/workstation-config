- hosts: localhost
  vars:
    username: nuurek
    home: /home/{{ username }}
    organizations: "{{lookup('file', 'secrets/organizations.yaml') | from_yaml}}"
  tasks:
  - name: Install required dependencies
    apt:
      pkg:
      - dbus-x11
      - libfuse2
      - python3-psutil
      - curl

  - name: Configure SSH
    synchronize:
      src: secrets/.ssh/
      dest: "{{ home }}/.ssh/"
    become: true
    become_user: "{{ username }}"
  
  - name: Install git
    apt: name=git

  - name: Configure git
    copy:
      src: configs/common/git/.gitconfig
      dest: "~/.gitconfig"
    become: true
    become_user: "{{ username }}"

  - name: Install Guake
    apt: name=guake

  - name: Check if Guake config is updated
    shell: if [[ "`dconf dump /apps/guake/`" == "`cat configs/common/guake/guake.dconf`" ]]; then echo "true"; else echo "false"; fi
    args:
      executable: /bin/bash
    register: guake_config
    changed_when: guake_config.stdout == 'false'

  - name: Configure Guake
    when: guake_config.changed
    shell: cat configs/common/guake/guake.dconf | dconf load /apps/guake/

  - name: Install Visual Studio Code
    community.general.snap:
      name: code
      classic: true

  - name: Check if Google Chrome is installed
    command: which google-chrome
    register: google_chrome
    changed_when: google_chrome.rc != 0

  - name: Install Google Chrome
    when: google_chrome.changed
    apt:
      deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

  - name: Set Google Chrome as default web browser
    when: google_chrome.changed
    command: xdg-settings set default-web-browser google-chrome.desktop

  - name: Enable deadsnakes APT repository 
    apt_repository: 
      repo: "ppa:deadsnakes/ppa"

  - name: Install Python related packages
    apt:
      pkg:
      - python3-pip
      - python3.9
      - python3.9-venv
      - python3.10-dev
      - python3.10-venv

  - name: Install PyCharm Professional Edition
    community.general.snap:
      name: pycharm-professional
      classic: true

  - name: Synchronize JetBrains configs
    synchronize:
      src: secrets/JetBrains/
      dest: "{{ home }}/.config/JetBrains/"
    become: true
    become_user: "{{ username }}"

  - name: Create organizations' directories
    file:
      path: "~/{{ item.name }}/Repositories"
      state: directory
    become: true
    become_user: "{{ username }}"
    loop: "{{ organizations }}"

  - name: Configure organizations' git
    copy:
      src: "secrets/{{ item.name }}/.gitconfig"
      dest: "~/{{ item.name }}/.gitconfig"
    become: true
    become_user: "{{ username }}"
    loop: "{{ organizations }}"

  - name: Set organizations' git configs in user .gitconfig
    blockinfile:
      path: "~/.gitconfig"
      block: |
        [includeIf "gitdir:~/{{ item.name }}/"]
          path = ~/{{ item.name }}/.gitconfig
    become: true
    become_user: "{{ username }}"
    loop: "{{ organizations }}"

  - name: Checkout organizations' repositories
    git:
      repo: "git@{{ item.0.base_repositories_path }}/{{ item.1 }}.git"
      dest: "~/{{ item.0.name }}/Repositories/{{ item.1 }}"
      accept_newhostkey: true
    become: true
    become_user: "{{ username }}"
    loop: "{{ organizations | subelements('repositories') }}"

  - name: Check if configurations for organizations' repositories exist
    stat:
      path: "secrets/{{ item.0.name }}/{{ item.1 }}/"
    loop: "{{ organizations | subelements('repositories') }}"
    register: organizations_repositories_configurations

  - name: Copy configurations to organizations' repositories
    synchronize:
      src: "secrets/{{ item.item.0.name }}/{{ item.item.1 }}/"
      dest: "{{ home }}/{{ item.item.0.name }}/Repositories/{{ item.item.1 }}/"
    become: true
    become_user: "{{ username }}"
    loop: "{{ organizations_repositories_configurations.results }}"
    when: "{{ item.stat.exists }}"

  - name: Install Spotify
    community.general.snap:
      name: spotify

  - name: Set favorite apps
    community.general.dconf:
      key: '/org/gnome/shell/favorite-apps'
      value: "['org.gnome.Nautilus.desktop', 'google-chrome.desktop', 'rambox_rambox.desktop', 'code_code.desktop', 'spotify_spotify.desktop']"
    become: true
    become_user: "{{ username }}"

  - name: Set MIME Applications
    copy:
      src: configs/common/gnome/mimeapps.list
      dest: "~/.config/mimeapps.list"
    become: true
    become_user: "{{ username }}"
